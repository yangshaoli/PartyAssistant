目前用到的api，带有注释的地方是现需要api中更改的

1. AccountRegist:
	url:"/a/accounts/regist/",
	method:POST,
	input:{
		"username":String(not null),
    "nickname":String(not null)  //注册的时候，加入nick name，密码去掉了
		}
	output:{
		"status":"ok",
		"description":"ok",
		"datasource":{
		"uid":Integer，
	"password" :String //返回需要的密码
				}
	
		}
2、 AccountLogin:
	url:"/a/accounts/login/",
	method:"POST",
	input:{
		"username":String(not null),
		"password":String(not null),
    "clientId":String(not null)
		}
	output:{
    "_israndomlogin":"0" or "1",
		"status":"ok",
		"description":"ok",
		"datasource":{
				"uid":Integer,
				"nickname":String,//登陆成功返回 nick name
				"username":String,
				"user_remaining":Integer,
				}
		}
3、
 createPartyForAndroid
    url:"/a/parties/an_createparty/"
    method:POST
    input:{
        "receivers":Array of Client Dict,
        "content":String of SMS Content,
        "_issendbyself":"0" or "1",
        "uID":Int,
        "addressType":"iphone" or "android"
        }
    output:Success- {
            "status":'ok',
            "description":"ok",
            "data":{
                        'partyId':Integer,
                        'applyURL':String,
                        'sms_count_remaining':Integer,
                        'clients':[ClientDict]
                        },
            'iphone_version':IPHONE_APP_VERSION(String),
            'android_version':ANDROID_APP_VERSION(String),
            }
        Error - {
            "status":'error',
            "description":Error Msg,
            "data":{},
            'iphone_version':IPHONE_APP_VERSION(String),
            'android_version':ANDROID_APP_VERSION(String),
            }
    ClientDict:{
            "name":String,
            "number":Email/Phone Num,
            "key":key(String),
            "id":Integer,
            }
		
4、getFullPartyListInfoForAndroid:
    url:"/a/parties/an_partylist/(userid)/(start_id)/"
    method:GET
    input:{
        }
    output:{
        "status":"ok",
        "description":"ok",
        "dataSource":{
                "lastID":Integer,
                "partyList":PartyDictArray,
                },
        'iphone_version':IPHONE_APP_VERSION(String),
        'android_version':ANDROID_APP_VERSION(String),
        }

    PartyDict:{
            "clientsData":Dict
            "description":String,
            "partyId":int,
            "type":"phone"/"email",
            "appliedClients":[Client],
            "donothingClients":[Client],
            "refusedClients":[Client],
            }

#1  start_id is the ID of the start query id, it will return the parties whose id is smaller than the start_id
    and it will also return the smallest id of the parties

#2  every party dict has a attr：
        clientsData{
            appliedClientcount:Integer,
            newAppliedClientcount:Integer,
            donothingClientcount:Integer,
            refusedClientcount:Integer,
            newRefusedClientcount:Integer,
        }
#3 Client Content:
    {
    'name':clientparty.client.name,
    'number':phone,
    'id':clientparty.id,
    'comment':String,
    'isCheck':BOOL,
    }		
5. EditParty:
	url:"/a/parties/editparty/",
	method:"POST",
	input:{
		"partyID":Integer,
		"description":description,
		"uID":Integer
		}
	output:{
		"status":"ok",
		"description":"ok",
		"datasource":{}
		}
6 、resendMsg(重新发送和重新邀请)
    url:"/a/parties/resendmsg/"
    method:"POST",
    input:{
        "receivers":Array of Client Dict,
        "content":String of SMS Content,
        "_issendbyself":"0" or "1",
        "uID":Int,
        "addressType":"iphone" or "android",
        "partyID":Integer
        },
    output:{
        "status":"ok",
        "description":"ok",
        "datasource":{
                        'partyId':Integer,
                        'applyURL':String,
                        'sms_count_remaining':Integer,
                       
                        "appliedClients":[Client],     //返回详细的clients
                        "donothingClients":[Client],
                        "refusedClients":[Client],
                        }
        }
    ClientDict:{
            "name":String,
            "number":Email/Phone Num,
            "key":key(String),
            "id":Integer,
            }
 
7、 ChangeClientStatus
	url:"/a/parties/change_client_status/"
	method:"POST",
	input:{
		"cpID":Integer(clientparty.id),
		"cpAction":"reject" or "apply"
		},
	output:{
		"status":"ok",
		"description":"ok",
		"datasource":{}
		}		
8、saveNickName
    url:"/a/accounts/save_nickname/"
    method:"POST",
    input:{
        "uid":Int,
        "nickname":"String",
        },
    output:{
        "status":"ok",
        "description":"ok",
        "datasource":{
                        'nickname':nickName,
                	'remaining_sms_count':Integer,
                	'email':email,
                	'email_binding_status':'unbind'/'bind'/'waitingbind',
                	'phone':phone,
                	'phone_binding_status':'unbind'/'bind'/'waitingbind',
                        }
        }			
 9、 DelParty:
	url:"/a/partie/deleteparty/",
	method:"POST",
	input:{
		"pID":Integer(party ID),
		"uID":Integer(user ID),
		}
	output:{
		"status":"ok",
		"description":"ok",
		"datasource":{}
		}       
